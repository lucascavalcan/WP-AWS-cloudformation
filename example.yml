AWSTemplateFormatVersion: '2010-09-09'
  SmtpUseSsl: !Equals [ !Ref SmtpSecurity, "SSL" ]
  SmtpUseStarttls: !Equals [ !Ref SmtpSecurity, "STARTTLS" ]
  UseCustomDomain: !Not [ !Equals [ !Ref CustomDomain, "" ] ]
  UseCustomSSLCertificateArn: !Not [ !Equals [ !Ref CustomSSLCertificateArn, "" ] ]
  UseSslPolicy: !Not [ !Equals [ !Ref SslPolicy, "" ] ]
  HasSiteIpWhitelist: !Not [ !Equals [ !Ref SiteWhitelistIps, "" ] ]
  DoesNotHaveSiteIpWhitelist: !Equals [ !Ref SiteWhitelistIps, "" ]
  IsActive: !Or
    - !Equals [ !Ref Active, "true" ]
    - !Equals [ !Ref Environment, "production" ]
Resources:
  ##
  # ECS task & service
  ##
  WebTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn:
      - StorageUserAccessKey
    Properties:
      ContainerDefinitions:
        - Name: xray-agent
          Essential: true
          Image: amazon/aws-xray-daemon
          Cpu: 32
          Command:
            - --log-level=dev
          Memory: 64
          PortMappings:
            - ContainerPort: 2000
              HostPort: 0
              Protocol: udp
          Environment:
            - Name: AWS_DEFAULT_REGION
              Value: us-east-1
            - Name: AWS_REGION
              Value: us-east-1
            - Name: AWS_SDK_LOAD_CONFIG
              Value: "1"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref AWS::StackName
              awslogs-region: us-east-1
              awslogs-stream-prefix: "xray-agent"
        - Name: web
          Essential: 'true'
          Image: bitnami/wordpress:5.4.2-debian-10-r0
          Memory: 
          MemoryReservation: !Ref MemoryReservation
          Privileged: 'true'
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: web
          Environment:
            - Name: AWS_ACCESS_KEY_ID
              Value: !Ref StorageUserAccessKey
            - Name: AWS_SECRET_ACCESS_KEY
              Value: !GetAtt StorageUserAccessKey.SecretAccessKey
            - Name: AWS_S3_BUCKET
              Value: !Ref Storage
            - Name: AWS_DEFAULT_REGION
              Value: !Ref AWS::Region
            - Name: SNS_TOPIC
              Value: !Ref StorageTopic
            - Name: DB_HOST
              Value: !Ref DbHost
            - Name: DB_NAME
              Value: !Ref DbName
            - Name: DB_USER
              Value: !Ref DbUsername
            - Name: DB_DATABASE
              Value: !Ref DbName
            - Name: DB_USERNAME
              Value: !Ref DbUsername
            - Name: DB_PASSWORD
              Value: !Ref DbPassword
            - Name: NEWRELIC_LICENSE
              Value: !Ref NewrelicLicense
            - Name: NEWRELIC_APPNAME
              Value: !Ref NewrelicAppName
            - Name: LB_IP_RANGE
              Value: 10.0.0.0/16
            - Name: LOGIN_WHITELIST_IPS
              Value: !Ref LoginWhitelistIps
            - Name: SITE_WHITELIST_IPS
              Value: !Ref SiteWhitelistIps
            - Name: S3_UPLOADS_BASE_URL
              Value: !Join [ '', [ 'https://s3-', !Ref 'AWS::Region', '.amazonaws.com/', !Ref Storage, '/uploads' ] ]
            - Name: SERVER_NAME
              Value: !If [ UseCustomDomain, !Ref CustomDomain, !Join [ '', [ !Ref AppName, '.', !FindInMap [ EnvironmentMap, !Ref Environment, Hostname ] ] ] ]
            - Name: SMTP_HOST
              Value: !Ref SmtpHost
            - Name: SMTP_PORT
              Value: !Ref SmtpPort
            - Name: SMTP_USER
              Value: !Ref SmtpUsername
            - Name: SMTP_PASS
              Value: !Ref SmtpPassword
            - Name: SMTP_USE_SSL
              Value: !If [SmtpUseSsl, 'true', !Ref 'AWS::NoValue']
            - Name: SMTP_USE_STARTTLS
              Value: !If [SmtpUseStarttls, 'true', !Ref 'AWS::NoValue']
            - Name: WP_HOME
              Value: !Join [ '', [ 'https://', !If [ UseCustomDomain, !Ref CustomDomain, !Join [ '', [ !Ref AppName, '.', !FindInMap [ EnvironmentMap, !Ref Environment, Hostname ] ] ] ] ] ]
            - Name: WP_SITEURL
              Value: !Join [ '', [ 'https://', !If [ UseCustomDomain, !Ref CustomDomain, !Join [ '', [ !Ref AppName, '.', !FindInMap [ EnvironmentMap, !Ref Environment, Hostname ] ] ] ], '/wp' ] ]
            - Name: WP_ENV
              Value: !Ref Environment
            - Name: AUTH_KEY
              Value: !Ref WpAuthKey
            - Name: SECURE_AUTH_KEY
              Value: !Ref WpSecureAuthKey
            - Name: LOGGED_IN_KEY
              Value: !Ref WpLoggedInKey
            - Name: NONCE_KEY
              Value: !Ref WpNonceKey
            - Name: AUTH_SALT
              Value: !Ref WpAuthSalt
            - Name: SECURE_AUTH_SALT
              Value: !Ref WpSecureAuthSalt
            - Name: LOGGED_IN_SALT
              Value: !Ref WpLoggedInSalt
            - Name: NONCE_SALT
              Value: !Ref WpNonceSalt
            - Name: MAINTENANCE_MODE
              Value: !Ref MaintenanceMode
            - Name: MAINTENANCE_WHITELIST_IPS
              Value: !Ref MaintenanceWhitelistIps
            - Name: WPMS_SA_EMAIL
              Value: !Ref WpmsSaEmail
            - Name: WPMS_SA_USERNAME
              Value: !Ref WpmsSaUsername
            - Name: WPMS_SA_PASSWORD
              Value: !Ref WpmsSaPassword
            - Name: PUSHER_APP_ID
              Value: !Ref PusherAppId
            - Name: PUSHER_APP_KEY
              Value: !Ref PusherAppKey
            - Name: PUSHER_APP_SECRET
              Value: !Ref PusherAppSecret
            - Name: PUSHER_APP_CLUSTER
              Value: !Ref PusherAppCluster
            - Name: MIX_PUSHER_APP_KEY
              Value: !Ref PusherAppKey
            - Name: MIX_PUSHER_APP_CLUSTER
              Value: !Ref PusherAppCluster
            - Name: APP_KEY
              Value: !Ref AppKey
            - Name: APP_DEBUG
              Value: !Ref AppDebug
            - Name: APP_ENV
              Value: !Ref Environment
            - Name: APP_URL
              Value: !Join [ '', [ 'https://', !If [ UseCustomDomain, !Ref CustomDomain, !Join [ '', [ !Ref AppName, '.', !FindInMap [ EnvironmentMap, !Ref Environment, Hostname ] ] ] ] ] ]
            - Name: BROADCAST_DRIVER
              Value: !Ref BroadcastDriver
            - Name: CACHE_DRIVER
              Value: !Ref CacheDriver
            - Name: QUEUE_CONNECTION
              Value: !Ref QueueConnection
            - Name: SESSION_DRIVER
              Value: !Ref SessionDriver
            - Name: SESSION_LIFETIME
              Value: !Ref SessionLifetime
            - Name: MAIL_HOST
              Value: !Ref SmtpHost
            - Name: MAIL_PORT
              Value: !Ref SmtpPort
            - Name: MAIL_USERNAME
              Value: !Ref SmtpUsername
            - Name: MAIL_PASSWORD
              Value: !Ref SmtpPassword
            - Name: MAIL_FROM_NAME
              Value: !Ref AppName
            - Name: SENTRY_DSN
              Value: !Ref SentryDsn
            - Name: SENTRY_TRACES_SAMPLE_RATE
              Value: !Ref SentryTracesSampleRate
            - Name: SENTRY_ENVIRONMENT
              Value: !Ref Environment
      Family: !Ref AWS::StackName
  WebService:
    Condition: IsActive
    Type: AWS::ECS::Service
    DependsOn:
      - TargetGroup
      - WebTaskDefinition
      - HttpListener
    Properties:
      Cluster: !FindInMap [ EnvironmentMap, !Ref Environment, ECSCluster ]
      DesiredCount: !Ref DesiredCount
      LoadBalancers:
        - ContainerName: web
          ContainerPort: '80'
          TargetGroupArn: !Ref TargetGroup
      Role: ecsServiceRole
      TaskDefinition: !Ref WebTaskDefinition
  ##
  # Log group
  ##
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref AWS::StackName
      RetentionInDays: 30

  ##
  # Uploads storage
  ##
  Storage:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: "Delete old backup versions after 30 days"
            NoncurrentVersionExpirationInDays: 30
            Status: Enabled
  StorageBucketPolicyWhitelisted:
    Type: AWS::S3::BucketPolicy
    Condition: HasSiteIpWhitelist
    Properties:
      Bucket: !Ref Storage
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "s3:GetObject"
            Effect: "Allow"
            Resource: !Join [ '', [ 'arn:aws:s3:::', !Ref Storage, '/uploads/*' ] ]
            Principal: "*"
            Condition:
              IpAddress:
                aws:SourceIp: !Split [ "," , !Ref SiteWhitelistIps ]
  StorageBucketPolicyPublic:
    Type: AWS::S3::BucketPolicy
    Condition: DoesNotHaveSiteIpWhitelist
    Properties:
      Bucket: !Ref Storage
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "s3:GetObject"
            Effect: "Allow"
            Resource: !Join [ '', [ 'arn:aws:s3:::', !Ref Storage, '/uploads/*' ] ]
            Principal: "*"
  StorageTopic:
    Type: AWS::SNS::Topic
  StorageUser:
    Type: AWS::IAM::User
    Properties:
      Groups:
        - WordPress
      Policies:
        - PolicyName: yas3fs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:AbortMultipartUpload
                  - s3:DeleteObject
                  - s3:DeleteObjectVersion
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListMultipartUploadParts
                  - s3:PutObject
                  - s3:RestoreObject
                  - s3:ListBucket
                Effect: Allow
                Resource:
                  - !Join [ '', [ 'arn:aws:s3:::', !Ref Storage ] ]
                  - !Join [ '', [ 'arn:aws:s3:::', !Ref Storage, '/*' ] ]
              - Action:
                  - sns:ConfirmSubscription
                  - sns:GetTopicAttributes
                  - sns:Publish
                  - sns:Subscribe
                  - sns:Unsubscribe
                Effect: Allow
                Resource: !Ref StorageTopic
              - Action: sqs:*
                Effect: Allow
                Resource: !Join [ '', [ 'arn:aws:sqs:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':yas3fs-*' ] ]
  StorageUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: !Ref RotateAccessKey
      UserName: !Ref StorageUser
  ##
  # Load Balancer
  ##
  LoadBalancer:
    Condition: IsActive
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: 'internet-facing'
      SecurityGroups:
        - !FindInMap [ EnvironmentMap, !Ref Environment, ELBSecurityGroup ]
      Subnets:
        - !FindInMap [ EnvironmentMap, !Ref Environment, ELBSubnet1 ]
        - !FindInMap [ EnvironmentMap, !Ref Environment, ELBSubnet2 ]
  TargetGroup:
    Condition: IsActive
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn:
      - LoadBalancer
    Properties:
      Protocol: HTTP
      Port: '80'
      VpcId: !FindInMap [ EnvironmentMap, !Ref Environment, TargetGroupVPC ]
      HealthCheckPath: "/wp/readme.html"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 20
  HttpListener:
    Condition: IsActive
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - TargetGroup
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: '80'
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
  HttpsListener:
    Condition: IsActive
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - TargetGroup
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: '443'
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !If [ UseCustomSSLCertificateArn, !Ref CustomSSLCertificateArn, !FindInMap [ EnvironmentMap, !Ref Environment, SSLCertificateArn ] ]
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      SslPolicy: !If [ UseSslPolicy, !Ref SslPolicy, !Ref "AWS::NoValue" ]
  ##
  # DNS record
  ##
  DNSRecord:
    Condition: IsActive
    Type: AWS::Route53::RecordSet
    DependsOn:
      - LoadBalancer
    Properties:
      HostedZoneName: !FindInMap [ EnvironmentMap, !Ref Environment, HostedZone ]
      Name: !Join [ '', [ !Ref AppName, '.', !FindInMap [ EnvironmentMap, !Ref Environment, Hostname ], '.' ] ]
      Type: "A"
      AliasTarget:
        DNSName: !GetAtt LoadBalancer.DNSName
        HostedZoneId: !GetAtt LoadBalancer.CanonicalHostedZoneID